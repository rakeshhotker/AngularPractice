name: Build, Publish, and Deploy Angular App

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch
  pull_request:
    branches:
      - main  # Trigger the workflow for PRs targeting the main branch

jobs:
  build_and_deploy:
    runs-on: self-hosted  # Use the latest Ubuntu runner

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js (Node 18.x)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Use Node.js 18.x

      # Step 3: Cache npm dependencies
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          npm install  # Install npm dependencies

      # Step 5: Build the Angular app for production (updated flag)
      - name: Build the Angular app
        run: |
          ng build --configuration production  # Correct flag for production build

      # Step 6: Publish build artifacts
      - name: Publish artifact
        uses: actions/upload-artifact@v3
        with:
          name: angular-build  # Name for the artifact
          path: ./dist/first-angular-app  # Path to the build output folder

      # Step 7: Log in to Azure using Service Principal
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}

      # Step 8: Deploy to Azure Web App
      - name: Deploy to Azure Web App
        run: |
          # Create a zip of the build folder
          zip -r output.zip ./dist/first-angular-app

          # Deploy to Azure Web App using az CLI
          az webapp deploy --name firstangular --resource-group FrontendApp --src-path output.zip --type zip
